name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: make test
    
    - name: Test CLI creation
      run: make dev-test

  build-and-release:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Build all platforms
      run: make build-all VERSION=${{ steps.version.outputs.VERSION }}
    
    - name: Create release packages
      run: make release VERSION=${{ steps.version.outputs.VERSION }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/releases/*.tar.gz
          dist/releases/*.zip
        body: |
          ## NDC (Noundry Deploy CLI) v${{ steps.version.outputs.VERSION }}
          
          ### Installation
          
          #### One-Line Install (Linux/macOS):
          ```bash
          curl -fsSL https://raw.githubusercontent.com/plsft/noundry-cloud-cli/main/install.sh | sh
          ```
          
          #### Manual Installation:
          1. Download the appropriate binary for your platform
          2. Extract the archive
          3. Move the `ndc` binary to a directory in your PATH
          
          ### Usage
          ```bash
          # List available templates
          ndc list
          
          # Create a new project
          ndc create dotnet-webapp-aws --name my-api
          ```
          
          ### Templates Available
          - `dotnet-webapp-aws` - .NET web app for AWS App Runner + ECR
          - `dotnet-webapp-gcp` - .NET web app for Google Cloud Run + Artifact Registry
          - `dotnet-webapp-azure` - .NET web app for Azure Container Apps + ACR
          
          ### What's New
          - Production-ready .NET 9 templates
          - Multi-stage optimized Dockerfiles
          - Complete Terraform infrastructure
          - Comprehensive documentation
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}